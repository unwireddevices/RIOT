SHELL := /bin/bash

# If no BOARD is found in the environment, use this default:
BOARD ?= unwd-range-l1-r3

# This has to be the absolute path to the RIOT base directory:
RIOTBASE ?= $(CURDIR)/../..

# Current firmware version
CFLAGS += -DFIRMWARE_VERSION=\"1.99\"

# Set default LoRa region
LORA_REGION ?= RU864
#LORA_REGION ?= EU868
#LORA_REGION ?= KZ865
CFLAGS += -DLORA_REGION=\"$(LORA_REGION)\"

# Disable LoRaWAN duty cycle restrictions
CFLAGS += -DDISABLE_LORAMAC_DUTYCYCLE

############ UMDK MODULES USED #####################
# variables in the list below must match modules'
# subdirectory name in ../../unwired-modules/
# and no other variable should have umdk-% name

umdk-4btn	        		= 1
umdk-adc	   				= 1
umdk-config    				= 1
umdk-counter   				= 1
umdk-fdc1004        		= 0
umdk-gassensor              = 0
umdk-gpio	        		= 1
umdk-gps	        		= 1
umdk-hd44780   				= 0
umdk-hx711          		= 0
umdk-ibutton   				= 0
umdk-inclinometer   		= 0
umdk-irblaster 		        = 0
umdk-light     				= 0
umdk-lmt01	        		= 0
umdk-meteo     				= 0
umdk-mhz19     				= 0
umdk-modbus	   		        = 0
umdk-parking                = 1
umdk-pir	   				= 1
umdk-pwm	   				= 1
umdk-rssiecho  				= 1
umdk-soil                   = 1
umdk-st95	                = 1
umdk-uart	   				= 1
# for a while, umdk-usound supports STM32L1 only
ifneq (,$(findstring unwd-range-l1,$(BOARD)))
umdk-usonic    				= 1
endif


####### UMDK MODULES defines and Makefile.include inclusion ############

export UMDK_MODULES_ENABLED
export UMDK_INCLUDES

define umdk_add_module
ifeq ($($(UMDK_MODULE_NAME)),1)
    UMDK_MODULES_ENABLED += $(UMDK_MODULE_NAME)
endif
endef

$(foreach UMDK_MODULE_NAME, $(filter umdk-%, ${.VARIABLES}), $(eval $(call umdk_add_module, $UMDK_MODULE_NAME)))
USEMODULE += $(UMDK_MODULES_ENABLED)

UMDK_MODULES_MAKEFILES = $(addsuffix /Makefile.include, $(addprefix $(RIOTBASE)/unwired-modules/, $(UMDK_MODULES_ENABLED)))

define umdk_include_makefile
ifneq ("$(wildcard $(FILE))","")
	include $(FILE)
endif
endef

$(foreach FILE, $(UMDK_MODULES_MAKEFILES), $(eval $(call umdk_include_makefile, $FILE)))

DIRS += $(RIOTBASE)/unwired-modules/
INCLUDES += -I$(RIOTBASE)/unwired-modules/include/

DIRS += $(addprefix $(RIOTBASE)/unwired-modules/, $(UMDK_MODULES_ENABLED))
INCLUDES += $(addprefix -I$(RIOTBASE)/unwired-modules/, $(addsuffix /include, $(UMDK_MODULES_ENABLED)))

UMDK_MODULES_LIST = $(RIOTBASE)/unwired-modules/include/umdk-modules.h

all: create_module_list

# shell script to build a list and write it to umdk-modules.h
create_module_list:
	@echo -n "Generating umdk-modules.h"; \
    modlist=(`echo $(UMDK_MODULES_ENABLED)`); \
	echo "/* DO NOT EDIT! FILE IS AUTO GENERATED */" > $(UMDK_MODULES_LIST); \
	echo "#ifndef UMDK_MODULES_H_" >> $(UMDK_MODULES_LIST); \
	echo -e "#define UMDK_MODULES_H_\n" >> $(UMDK_MODULES_LIST); \
	for i in "$${modlist[@]}"; do \
        [ ! -z "$(RIOTBASE)/unwired-modules/$$i/include/$$i.h" ] &&  echo "#include <$$i.h>" >> $(UMDK_MODULES_LIST); \
	done; \
	printf "\nstatic const unwd_module_t modules[] = {\n" >> $(UMDK_MODULES_LIST); \
	for k in "$${modlist[@]}"; do \
        echo -n "."; \
        name=`echo $$k | sed -e "s/^umdk-//"`; \
        name_up=`echo $$name | tr '[:lower:]' '[:upper:]'`; \
        printf "{ UNWDS_$${name_up}_MODULE_ID, \"$${name}\", " >> $(UMDK_MODULES_LIST); \
        if      \
            grep -q "umdk_$${name}_init" $(RIOTBASE)/unwired-modules/$$k/*.c; then printf "umdk_$${name}_init, "  >> $(UMDK_MODULES_LIST); \
        else    \
            printf "NULL, " >> $(UMDK_MODULES_LIST); \
        fi; \
        if      \
            grep -q "umdk_$${name}_cmd" $(RIOTBASE)/unwired-modules/$$k/*.c; then printf "umdk_$${name}_cmd, " >> $(UMDK_MODULES_LIST); \
        else    \
            printf "NULL, "  >> $(UMDK_MODULES_LIST); \
        fi; \
        if      \
            grep -q "umdk_$${name}_broadcast" $(RIOTBASE)/unwired-modules/$$k/*.c; then printf "umdk_$${name}_broadcast"  >> $(UMDK_MODULES_LIST); \
        else    \
            printf "NULL"  >> $(UMDK_MODULES_LIST);\
        fi; \
        printf "},\n"  >> $(UMDK_MODULES_LIST); \
        sed -i "s/#define _UMDK_MID_.*/#define _UMDK_MID_ UNWDS_$${name_up}_MODULE_ID/" $(RIOTBASE)/unwired-modules/$$k/*.c; \
        sed -i "s/#define _UMDK_NAME_.*/#define _UMDK_NAME_ \"$${name}\"/" $(RIOTBASE)/unwired-modules/$$k/*.c; \
	done; \
	printf "{ 0, \"\", NULL, NULL, NULL } };\n" >> $(UMDK_MODULES_LIST); \
	echo -e "\n#endif" >> $(UMDK_MODULES_LIST); \
	echo " done."

####################### RIOTboot ########################
FEATURES_REQUIRED += riotboot
APP_VER ?= $(shell date +'%Y%m%d%H')
$(info Application version ${APP_VER})

################ Other modules to include ################
USEMODULE += shell
USEMODULE += shell_commands
USEMODULE += shell_password
USEMODULE += ps
USEMODULE += od
USEMODULE += xtimer
USEMODULE += crypto
USEMODULE += cipher_modes
USEMODULE += random
USEMODULE += hashes
USEMODULE += checksum
USEMODULE += lptimer
# USEMODULE += periph_uart_dma_tx

USEMODULE += sx127x

USEMODULE += loralan-common
USEMODULE += unwds-common

DIRS += $(RIOTBASE)/apps/unwds-common/loralan-device/
DIRS += $(RIOTBASE)/apps/unwds-common/loralan-mac/
DIRS += $(RIOTBASE)/apps/unwds-common/loralan-common/
DIRS += $(RIOTBASE)/apps/unwds-common/unwds-common/

INCLUDES += -I$(RIOTBASE)/apps/unwds-common/loralan-device/include/
INCLUDES += -I$(RIOTBASE)/apps/unwds-common/loralan-mac/include/
INCLUDES += -I$(RIOTBASE)/apps/unwds-common/loralan-common/include/
INCLUDES += -I$(RIOTBASE)/apps/unwds-common/unwds-common/include/

####################################################

FEATURES_REQUIRED += periph_adc
FEATURES_REQUIRED += periph_gpio
FEATURES_REQUIRED += periph_i2c
FEATURES_REQUIRED += periph_pwm
FEATURES_REQUIRED += periph_rtt
FEATURES_REQUIRED += periph_spi
FEATURES_REQUIRED += periph_eeprom
FEATURES_REQUIRED += periph_uart
FEATURES_REQUIRED += periph_pm
FEATURES_REQUIRED += periph_iwdg
FEATURES_REQUIRED += periph_cpuid
FEATURES_REQUIRED += periph_status
FEATURES_REQUIRED += periph_status_extended

QUIET ?= 1

CFLAGS += -DDEVELHELP
CFLAGS += -DNO_RIOT_BANNER

####################################################

CFLAGS += -DAES_NO_DECRYPTION
CFLAGS += -DCRYPTO_AES

FEATURES_OPTIONAL += config

include $(RIOTBASE)/Makefile.include
